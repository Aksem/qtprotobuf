// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#ifndef PROTOBUF_INCLUDED_addressbook_2eproto
#define PROTOBUF_INCLUDED_addressbook_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_addressbook_2eproto 

namespace protobuf_addressbook_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_addressbook_2eproto
namespace qtprotobuf {
namespace examples {
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
class Contact;
class ContactDefaultTypeInternal;
extern ContactDefaultTypeInternal _Contact_default_instance_;
class Contact_PhonesEntry_DoNotUse;
class Contact_PhonesEntry_DoNotUseDefaultTypeInternal;
extern Contact_PhonesEntry_DoNotUseDefaultTypeInternal _Contact_PhonesEntry_DoNotUse_default_instance_;
class Contacts;
class ContactsDefaultTypeInternal;
extern ContactsDefaultTypeInternal _Contacts_default_instance_;
class Job;
class JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class ListFrame;
class ListFrameDefaultTypeInternal;
extern ListFrameDefaultTypeInternal _ListFrame_default_instance_;
class PhoneNumber;
class PhoneNumberDefaultTypeInternal;
extern PhoneNumberDefaultTypeInternal _PhoneNumber_default_instance_;
class SimpleResult;
class SimpleResultDefaultTypeInternal;
extern SimpleResultDefaultTypeInternal _SimpleResult_default_instance_;
}  // namespace examples
}  // namespace qtprotobuf
namespace google {
namespace protobuf {
template<> ::qtprotobuf::examples::Address* Arena::CreateMaybeMessage<::qtprotobuf::examples::Address>(Arena*);
template<> ::qtprotobuf::examples::Contact* Arena::CreateMaybeMessage<::qtprotobuf::examples::Contact>(Arena*);
template<> ::qtprotobuf::examples::Contact_PhonesEntry_DoNotUse* Arena::CreateMaybeMessage<::qtprotobuf::examples::Contact_PhonesEntry_DoNotUse>(Arena*);
template<> ::qtprotobuf::examples::Contacts* Arena::CreateMaybeMessage<::qtprotobuf::examples::Contacts>(Arena*);
template<> ::qtprotobuf::examples::Job* Arena::CreateMaybeMessage<::qtprotobuf::examples::Job>(Arena*);
template<> ::qtprotobuf::examples::ListFrame* Arena::CreateMaybeMessage<::qtprotobuf::examples::ListFrame>(Arena*);
template<> ::qtprotobuf::examples::PhoneNumber* Arena::CreateMaybeMessage<::qtprotobuf::examples::PhoneNumber>(Arena*);
template<> ::qtprotobuf::examples::SimpleResult* Arena::CreateMaybeMessage<::qtprotobuf::examples::SimpleResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace qtprotobuf {
namespace examples {

enum Contact_PhoneType {
  Contact_PhoneType_Home = 0,
  Contact_PhoneType_Work = 1,
  Contact_PhoneType_Mobile = 2,
  Contact_PhoneType_Other = 3,
  Contact_PhoneType_Contact_PhoneType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Contact_PhoneType_Contact_PhoneType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Contact_PhoneType_IsValid(int value);
const Contact_PhoneType Contact_PhoneType_PhoneType_MIN = Contact_PhoneType_Home;
const Contact_PhoneType Contact_PhoneType_PhoneType_MAX = Contact_PhoneType_Other;
const int Contact_PhoneType_PhoneType_ARRAYSIZE = Contact_PhoneType_PhoneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Contact_PhoneType_descriptor();
inline const ::std::string& Contact_PhoneType_Name(Contact_PhoneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Contact_PhoneType_descriptor(), value);
}
inline bool Contact_PhoneType_Parse(
    const ::std::string& name, Contact_PhoneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Contact_PhoneType>(
    Contact_PhoneType_descriptor(), name, value);
}
// ===================================================================

class PhoneNumber : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.PhoneNumber) */ {
 public:
  PhoneNumber();
  virtual ~PhoneNumber();

  PhoneNumber(const PhoneNumber& from);

  inline PhoneNumber& operator=(const PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhoneNumber(PhoneNumber&& from) noexcept
    : PhoneNumber() {
    *this = ::std::move(from);
  }

  inline PhoneNumber& operator=(PhoneNumber&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhoneNumber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhoneNumber* internal_default_instance() {
    return reinterpret_cast<const PhoneNumber*>(
               &_PhoneNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PhoneNumber* other);
  friend void swap(PhoneNumber& a, PhoneNumber& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhoneNumber* New() const final {
    return CreateMaybeMessage<PhoneNumber>(NULL);
  }

  PhoneNumber* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PhoneNumber>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PhoneNumber& from);
  void MergeFrom(const PhoneNumber& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhoneNumber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 number = 2;
  int number_size() const;
  void clear_number();
  static const int kNumberFieldNumber = 2;
  ::google::protobuf::uint64 number(int index) const;
  void set_number(int index, ::google::protobuf::uint64 value);
  void add_number(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      number() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_number();

  // uint32 countryCode = 1;
  void clear_countrycode();
  static const int kCountryCodeFieldNumber = 1;
  ::google::protobuf::uint32 countrycode() const;
  void set_countrycode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.PhoneNumber)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > number_;
  mutable int _number_cached_byte_size_;
  ::google::protobuf::uint32 countrycode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Address : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Address(Address&& from) noexcept
    : Address() {
    *this = ::std::move(from);
  }

  inline Address& operator=(Address&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Address* other);
  friend void swap(Address& a, Address& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Address* New() const final {
    return CreateMaybeMessage<Address>(NULL);
  }

  Address* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Address>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Address* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string streetAddress1 = 2;
  void clear_streetaddress1();
  static const int kStreetAddress1FieldNumber = 2;
  const ::std::string& streetaddress1() const;
  void set_streetaddress1(const ::std::string& value);
  #if LANG_CXX11
  void set_streetaddress1(::std::string&& value);
  #endif
  void set_streetaddress1(const char* value);
  void set_streetaddress1(const char* value, size_t size);
  ::std::string* mutable_streetaddress1();
  ::std::string* release_streetaddress1();
  void set_allocated_streetaddress1(::std::string* streetaddress1);

  // string streetAddress2 = 3;
  void clear_streetaddress2();
  static const int kStreetAddress2FieldNumber = 3;
  const ::std::string& streetaddress2() const;
  void set_streetaddress2(const ::std::string& value);
  #if LANG_CXX11
  void set_streetaddress2(::std::string&& value);
  #endif
  void set_streetaddress2(const char* value);
  void set_streetaddress2(const char* value, size_t size);
  ::std::string* mutable_streetaddress2();
  ::std::string* release_streetaddress2();
  void set_allocated_streetaddress2(::std::string* streetaddress2);

  // string state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // uint64 zipCode = 1;
  void clear_zipcode();
  static const int kZipCodeFieldNumber = 1;
  ::google::protobuf::uint64 zipcode() const;
  void set_zipcode(::google::protobuf::uint64 value);

  // uint32 country = 5;
  void clear_country();
  static const int kCountryFieldNumber = 5;
  ::google::protobuf::uint32 country() const;
  void set_country(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.Address)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr streetaddress1_;
  ::google::protobuf::internal::ArenaStringPtr streetaddress2_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::uint64 zipcode_;
  ::google::protobuf::uint32 country_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Job : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.Job) */ {
 public:
  Job();
  virtual ~Job();

  Job(const Job& from);

  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job(Job&& from) noexcept
    : Job() {
    *this = ::std::move(from);
  }

  inline Job& operator=(Job&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
               &_Job_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Job* other);
  friend void swap(Job& a, Job& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job* New() const final {
    return CreateMaybeMessage<Job>(NULL);
  }

  Job* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Job>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Job* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // .qtprotobuf.examples.Address officeAddress = 2;
  bool has_officeaddress() const;
  void clear_officeaddress();
  static const int kOfficeAddressFieldNumber = 2;
  private:
  const ::qtprotobuf::examples::Address& _internal_officeaddress() const;
  public:
  const ::qtprotobuf::examples::Address& officeaddress() const;
  ::qtprotobuf::examples::Address* release_officeaddress();
  ::qtprotobuf::examples::Address* mutable_officeaddress();
  void set_allocated_officeaddress(::qtprotobuf::examples::Address* officeaddress);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.Job)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::qtprotobuf::examples::Address* officeaddress_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Contact_PhonesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Contact_PhonesEntry_DoNotUse, 
    ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Contact_PhonesEntry_DoNotUse, 
    ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Contact_PhonesEntry_DoNotUse();
  Contact_PhonesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Contact_PhonesEntry_DoNotUse& other);
  static const Contact_PhonesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Contact_PhonesEntry_DoNotUse*>(&_Contact_PhonesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Contact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.Contact) */ {
 public:
  Contact();
  virtual ~Contact();

  Contact(const Contact& from);

  inline Contact& operator=(const Contact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Contact(Contact&& from) noexcept
    : Contact() {
    *this = ::std::move(from);
  }

  inline Contact& operator=(Contact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Contact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Contact* internal_default_instance() {
    return reinterpret_cast<const Contact*>(
               &_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Contact* other);
  friend void swap(Contact& a, Contact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Contact* New() const final {
    return CreateMaybeMessage<Contact>(NULL);
  }

  Contact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Contact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Contact& from);
  void MergeFrom(const Contact& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  typedef Contact_PhoneType PhoneType;
  static const PhoneType Home =
    Contact_PhoneType_Home;
  static const PhoneType Work =
    Contact_PhoneType_Work;
  static const PhoneType Mobile =
    Contact_PhoneType_Mobile;
  static const PhoneType Other =
    Contact_PhoneType_Other;
  static inline bool PhoneType_IsValid(int value) {
    return Contact_PhoneType_IsValid(value);
  }
  static const PhoneType PhoneType_MIN =
    Contact_PhoneType_PhoneType_MIN;
  static const PhoneType PhoneType_MAX =
    Contact_PhoneType_PhoneType_MAX;
  static const int PhoneType_ARRAYSIZE =
    Contact_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhoneType_descriptor() {
    return Contact_PhoneType_descriptor();
  }
  static inline const ::std::string& PhoneType_Name(PhoneType value) {
    return Contact_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(const ::std::string& name,
      PhoneType* value) {
    return Contact_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<int32, .qtprotobuf.examples.PhoneNumber> phones = 4;
  int phones_size() const;
  void clear_phones();
  static const int kPhonesFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber >&
      phones() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber >*
      mutable_phones();

  // string firstName = 1;
  void clear_firstname();
  static const int kFirstNameFieldNumber = 1;
  const ::std::string& firstname() const;
  void set_firstname(const ::std::string& value);
  #if LANG_CXX11
  void set_firstname(::std::string&& value);
  #endif
  void set_firstname(const char* value);
  void set_firstname(const char* value, size_t size);
  ::std::string* mutable_firstname();
  ::std::string* release_firstname();
  void set_allocated_firstname(::std::string* firstname);

  // string lastName = 2;
  void clear_lastname();
  static const int kLastNameFieldNumber = 2;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastname(::std::string&& value);
  #endif
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // string middleName = 3;
  void clear_middlename();
  static const int kMiddleNameFieldNumber = 3;
  const ::std::string& middlename() const;
  void set_middlename(const ::std::string& value);
  #if LANG_CXX11
  void set_middlename(::std::string&& value);
  #endif
  void set_middlename(const char* value);
  void set_middlename(const char* value, size_t size);
  ::std::string* mutable_middlename();
  ::std::string* release_middlename();
  void set_allocated_middlename(::std::string* middlename);

  // .qtprotobuf.examples.Address address = 5;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  private:
  const ::qtprotobuf::examples::Address& _internal_address() const;
  public:
  const ::qtprotobuf::examples::Address& address() const;
  ::qtprotobuf::examples::Address* release_address();
  ::qtprotobuf::examples::Address* mutable_address();
  void set_allocated_address(::qtprotobuf::examples::Address* address);

  // .qtprotobuf.examples.Job job = 6;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 6;
  private:
  const ::qtprotobuf::examples::Job& _internal_job() const;
  public:
  const ::qtprotobuf::examples::Job& job() const;
  ::qtprotobuf::examples::Job* release_job();
  ::qtprotobuf::examples::Job* mutable_job();
  void set_allocated_job(::qtprotobuf::examples::Job* job);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.Contact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Contact_PhonesEntry_DoNotUse,
      ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > phones_;
  ::google::protobuf::internal::ArenaStringPtr firstname_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr middlename_;
  ::qtprotobuf::examples::Address* address_;
  ::qtprotobuf::examples::Job* job_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Contacts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.Contacts) */ {
 public:
  Contacts();
  virtual ~Contacts();

  Contacts(const Contacts& from);

  inline Contacts& operator=(const Contacts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Contacts(Contacts&& from) noexcept
    : Contacts() {
    *this = ::std::move(from);
  }

  inline Contacts& operator=(Contacts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Contacts& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Contacts* internal_default_instance() {
    return reinterpret_cast<const Contacts*>(
               &_Contacts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Contacts* other);
  friend void swap(Contacts& a, Contacts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Contacts* New() const final {
    return CreateMaybeMessage<Contacts>(NULL);
  }

  Contacts* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Contacts>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Contacts& from);
  void MergeFrom(const Contacts& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Contacts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qtprotobuf.examples.Contact list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::qtprotobuf::examples::Contact* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::qtprotobuf::examples::Contact >*
      mutable_list();
  const ::qtprotobuf::examples::Contact& list(int index) const;
  ::qtprotobuf::examples::Contact* add_list();
  const ::google::protobuf::RepeatedPtrField< ::qtprotobuf::examples::Contact >&
      list() const;

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.Contacts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qtprotobuf::examples::Contact > list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SimpleResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.SimpleResult) */ {
 public:
  SimpleResult();
  virtual ~SimpleResult();

  SimpleResult(const SimpleResult& from);

  inline SimpleResult& operator=(const SimpleResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SimpleResult(SimpleResult&& from) noexcept
    : SimpleResult() {
    *this = ::std::move(from);
  }

  inline SimpleResult& operator=(SimpleResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SimpleResult* internal_default_instance() {
    return reinterpret_cast<const SimpleResult*>(
               &_SimpleResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SimpleResult* other);
  friend void swap(SimpleResult& a, SimpleResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SimpleResult* New() const final {
    return CreateMaybeMessage<SimpleResult>(NULL);
  }

  SimpleResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SimpleResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SimpleResult& from);
  void MergeFrom(const SimpleResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SimpleResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.SimpleResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qtprotobuf.examples.ListFrame) */ {
 public:
  ListFrame();
  virtual ~ListFrame();

  ListFrame(const ListFrame& from);

  inline ListFrame& operator=(const ListFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFrame(ListFrame&& from) noexcept
    : ListFrame() {
    *this = ::std::move(from);
  }

  inline ListFrame& operator=(ListFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFrame* internal_default_instance() {
    return reinterpret_cast<const ListFrame*>(
               &_ListFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ListFrame* other);
  friend void swap(ListFrame& a, ListFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFrame* New() const final {
    return CreateMaybeMessage<ListFrame>(NULL);
  }

  ListFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFrame& from);
  void MergeFrom(const ListFrame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // sint32 end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int32 end() const;
  void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qtprotobuf.examples.ListFrame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 end_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_addressbook_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PhoneNumber

// uint32 countryCode = 1;
inline void PhoneNumber::clear_countrycode() {
  countrycode_ = 0u;
}
inline ::google::protobuf::uint32 PhoneNumber::countrycode() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.PhoneNumber.countryCode)
  return countrycode_;
}
inline void PhoneNumber::set_countrycode(::google::protobuf::uint32 value) {
  
  countrycode_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.PhoneNumber.countryCode)
}

// repeated uint64 number = 2;
inline int PhoneNumber::number_size() const {
  return number_.size();
}
inline void PhoneNumber::clear_number() {
  number_.Clear();
}
inline ::google::protobuf::uint64 PhoneNumber::number(int index) const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.PhoneNumber.number)
  return number_.Get(index);
}
inline void PhoneNumber::set_number(int index, ::google::protobuf::uint64 value) {
  number_.Set(index, value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.PhoneNumber.number)
}
inline void PhoneNumber::add_number(::google::protobuf::uint64 value) {
  number_.Add(value);
  // @@protoc_insertion_point(field_add:qtprotobuf.examples.PhoneNumber.number)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PhoneNumber::number() const {
  // @@protoc_insertion_point(field_list:qtprotobuf.examples.PhoneNumber.number)
  return number_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PhoneNumber::mutable_number() {
  // @@protoc_insertion_point(field_mutable_list:qtprotobuf.examples.PhoneNumber.number)
  return &number_;
}

// -------------------------------------------------------------------

// Address

// uint64 zipCode = 1;
inline void Address::clear_zipcode() {
  zipcode_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Address::zipcode() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Address.zipCode)
  return zipcode_;
}
inline void Address::set_zipcode(::google::protobuf::uint64 value) {
  
  zipcode_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Address.zipCode)
}

// string streetAddress1 = 2;
inline void Address::clear_streetaddress1() {
  streetaddress1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::streetaddress1() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Address.streetAddress1)
  return streetaddress1_.GetNoArena();
}
inline void Address::set_streetaddress1(const ::std::string& value) {
  
  streetaddress1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Address.streetAddress1)
}
#if LANG_CXX11
inline void Address::set_streetaddress1(::std::string&& value) {
  
  streetaddress1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Address.streetAddress1)
}
#endif
inline void Address::set_streetaddress1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  streetaddress1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Address.streetAddress1)
}
inline void Address::set_streetaddress1(const char* value, size_t size) {
  
  streetaddress1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Address.streetAddress1)
}
inline ::std::string* Address::mutable_streetaddress1() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Address.streetAddress1)
  return streetaddress1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_streetaddress1() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Address.streetAddress1)
  
  return streetaddress1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_streetaddress1(::std::string* streetaddress1) {
  if (streetaddress1 != NULL) {
    
  } else {
    
  }
  streetaddress1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streetaddress1);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Address.streetAddress1)
}

// string streetAddress2 = 3;
inline void Address::clear_streetaddress2() {
  streetaddress2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::streetaddress2() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Address.streetAddress2)
  return streetaddress2_.GetNoArena();
}
inline void Address::set_streetaddress2(const ::std::string& value) {
  
  streetaddress2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Address.streetAddress2)
}
#if LANG_CXX11
inline void Address::set_streetaddress2(::std::string&& value) {
  
  streetaddress2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Address.streetAddress2)
}
#endif
inline void Address::set_streetaddress2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  streetaddress2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Address.streetAddress2)
}
inline void Address::set_streetaddress2(const char* value, size_t size) {
  
  streetaddress2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Address.streetAddress2)
}
inline ::std::string* Address::mutable_streetaddress2() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Address.streetAddress2)
  return streetaddress2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_streetaddress2() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Address.streetAddress2)
  
  return streetaddress2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_streetaddress2(::std::string* streetaddress2) {
  if (streetaddress2 != NULL) {
    
  } else {
    
  }
  streetaddress2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streetaddress2);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Address.streetAddress2)
}

// string state = 4;
inline void Address::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::state() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Address.state)
  return state_.GetNoArena();
}
inline void Address::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Address.state)
}
#if LANG_CXX11
inline void Address::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Address.state)
}
#endif
inline void Address::set_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Address.state)
}
inline void Address::set_state(const char* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Address.state)
}
inline ::std::string* Address::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Address.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_state() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Address.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Address.state)
}

// uint32 country = 5;
inline void Address::clear_country() {
  country_ = 0u;
}
inline ::google::protobuf::uint32 Address::country() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Address.country)
  return country_;
}
inline void Address::set_country(::google::protobuf::uint32 value) {
  
  country_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Address.country)
}

// -------------------------------------------------------------------

// Job

// string title = 1;
inline void Job::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::title() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Job.title)
  return title_.GetNoArena();
}
inline void Job::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Job.title)
}
#if LANG_CXX11
inline void Job::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Job.title)
}
#endif
inline void Job::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Job.title)
}
inline void Job::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Job.title)
}
inline ::std::string* Job::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Job.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_title() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Job.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Job.title)
}

// .qtprotobuf.examples.Address officeAddress = 2;
inline bool Job::has_officeaddress() const {
  return this != internal_default_instance() && officeaddress_ != NULL;
}
inline void Job::clear_officeaddress() {
  if (GetArenaNoVirtual() == NULL && officeaddress_ != NULL) {
    delete officeaddress_;
  }
  officeaddress_ = NULL;
}
inline const ::qtprotobuf::examples::Address& Job::_internal_officeaddress() const {
  return *officeaddress_;
}
inline const ::qtprotobuf::examples::Address& Job::officeaddress() const {
  const ::qtprotobuf::examples::Address* p = officeaddress_;
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Job.officeAddress)
  return p != NULL ? *p : *reinterpret_cast<const ::qtprotobuf::examples::Address*>(
      &::qtprotobuf::examples::_Address_default_instance_);
}
inline ::qtprotobuf::examples::Address* Job::release_officeaddress() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Job.officeAddress)
  
  ::qtprotobuf::examples::Address* temp = officeaddress_;
  officeaddress_ = NULL;
  return temp;
}
inline ::qtprotobuf::examples::Address* Job::mutable_officeaddress() {
  
  if (officeaddress_ == NULL) {
    auto* p = CreateMaybeMessage<::qtprotobuf::examples::Address>(GetArenaNoVirtual());
    officeaddress_ = p;
  }
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Job.officeAddress)
  return officeaddress_;
}
inline void Job::set_allocated_officeaddress(::qtprotobuf::examples::Address* officeaddress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete officeaddress_;
  }
  if (officeaddress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      officeaddress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, officeaddress, submessage_arena);
    }
    
  } else {
    
  }
  officeaddress_ = officeaddress;
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Job.officeAddress)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Contact

// string firstName = 1;
inline void Contact::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::firstname() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contact.firstName)
  return firstname_.GetNoArena();
}
inline void Contact::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Contact.firstName)
}
#if LANG_CXX11
inline void Contact::set_firstname(::std::string&& value) {
  
  firstname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Contact.firstName)
}
#endif
inline void Contact::set_firstname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Contact.firstName)
}
inline void Contact::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Contact.firstName)
}
inline ::std::string* Contact::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contact.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_firstname() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Contact.firstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Contact.firstName)
}

// string lastName = 2;
inline void Contact::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::lastname() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contact.lastName)
  return lastname_.GetNoArena();
}
inline void Contact::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Contact.lastName)
}
#if LANG_CXX11
inline void Contact::set_lastname(::std::string&& value) {
  
  lastname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Contact.lastName)
}
#endif
inline void Contact::set_lastname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Contact.lastName)
}
inline void Contact::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Contact.lastName)
}
inline ::std::string* Contact::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contact.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_lastname() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Contact.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Contact.lastName)
}

// string middleName = 3;
inline void Contact::clear_middlename() {
  middlename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::middlename() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contact.middleName)
  return middlename_.GetNoArena();
}
inline void Contact::set_middlename(const ::std::string& value) {
  
  middlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.Contact.middleName)
}
#if LANG_CXX11
inline void Contact::set_middlename(::std::string&& value) {
  
  middlename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qtprotobuf.examples.Contact.middleName)
}
#endif
inline void Contact::set_middlename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  middlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qtprotobuf.examples.Contact.middleName)
}
inline void Contact::set_middlename(const char* value, size_t size) {
  
  middlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qtprotobuf.examples.Contact.middleName)
}
inline ::std::string* Contact::mutable_middlename() {
  
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contact.middleName)
  return middlename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_middlename() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Contact.middleName)
  
  return middlename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_middlename(::std::string* middlename) {
  if (middlename != NULL) {
    
  } else {
    
  }
  middlename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), middlename);
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Contact.middleName)
}

// map<int32, .qtprotobuf.examples.PhoneNumber> phones = 4;
inline int Contact::phones_size() const {
  return phones_.size();
}
inline void Contact::clear_phones() {
  phones_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber >&
Contact::phones() const {
  // @@protoc_insertion_point(field_map:qtprotobuf.examples.Contact.phones)
  return phones_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::qtprotobuf::examples::PhoneNumber >*
Contact::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_map:qtprotobuf.examples.Contact.phones)
  return phones_.MutableMap();
}

// .qtprotobuf.examples.Address address = 5;
inline bool Contact::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void Contact::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
inline const ::qtprotobuf::examples::Address& Contact::_internal_address() const {
  return *address_;
}
inline const ::qtprotobuf::examples::Address& Contact::address() const {
  const ::qtprotobuf::examples::Address* p = address_;
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contact.address)
  return p != NULL ? *p : *reinterpret_cast<const ::qtprotobuf::examples::Address*>(
      &::qtprotobuf::examples::_Address_default_instance_);
}
inline ::qtprotobuf::examples::Address* Contact::release_address() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Contact.address)
  
  ::qtprotobuf::examples::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::qtprotobuf::examples::Address* Contact::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::qtprotobuf::examples::Address>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contact.address)
  return address_;
}
inline void Contact::set_allocated_address(::qtprotobuf::examples::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete address_;
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Contact.address)
}

// .qtprotobuf.examples.Job job = 6;
inline bool Contact::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
inline void Contact::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) {
    delete job_;
  }
  job_ = NULL;
}
inline const ::qtprotobuf::examples::Job& Contact::_internal_job() const {
  return *job_;
}
inline const ::qtprotobuf::examples::Job& Contact::job() const {
  const ::qtprotobuf::examples::Job* p = job_;
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contact.job)
  return p != NULL ? *p : *reinterpret_cast<const ::qtprotobuf::examples::Job*>(
      &::qtprotobuf::examples::_Job_default_instance_);
}
inline ::qtprotobuf::examples::Job* Contact::release_job() {
  // @@protoc_insertion_point(field_release:qtprotobuf.examples.Contact.job)
  
  ::qtprotobuf::examples::Job* temp = job_;
  job_ = NULL;
  return temp;
}
inline ::qtprotobuf::examples::Job* Contact::mutable_job() {
  
  if (job_ == NULL) {
    auto* p = CreateMaybeMessage<::qtprotobuf::examples::Job>(GetArenaNoVirtual());
    job_ = p;
  }
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contact.job)
  return job_;
}
inline void Contact::set_allocated_job(::qtprotobuf::examples::Job* job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete job_;
  }
  if (job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job, submessage_arena);
    }
    
  } else {
    
  }
  job_ = job;
  // @@protoc_insertion_point(field_set_allocated:qtprotobuf.examples.Contact.job)
}

// -------------------------------------------------------------------

// Contacts

// repeated .qtprotobuf.examples.Contact list = 1;
inline int Contacts::list_size() const {
  return list_.size();
}
inline void Contacts::clear_list() {
  list_.Clear();
}
inline ::qtprotobuf::examples::Contact* Contacts::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:qtprotobuf.examples.Contacts.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::qtprotobuf::examples::Contact >*
Contacts::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:qtprotobuf.examples.Contacts.list)
  return &list_;
}
inline const ::qtprotobuf::examples::Contact& Contacts::list(int index) const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.Contacts.list)
  return list_.Get(index);
}
inline ::qtprotobuf::examples::Contact* Contacts::add_list() {
  // @@protoc_insertion_point(field_add:qtprotobuf.examples.Contacts.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::qtprotobuf::examples::Contact >&
Contacts::list() const {
  // @@protoc_insertion_point(field_list:qtprotobuf.examples.Contacts.list)
  return list_;
}

// -------------------------------------------------------------------

// SimpleResult

// bool ok = 1;
inline void SimpleResult::clear_ok() {
  ok_ = false;
}
inline bool SimpleResult::ok() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.SimpleResult.ok)
  return ok_;
}
inline void SimpleResult::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.SimpleResult.ok)
}

// -------------------------------------------------------------------

// ListFrame

// sint32 start = 1;
inline void ListFrame::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 ListFrame::start() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.ListFrame.start)
  return start_;
}
inline void ListFrame::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.ListFrame.start)
}

// sint32 end = 2;
inline void ListFrame::clear_end() {
  end_ = 0;
}
inline ::google::protobuf::int32 ListFrame::end() const {
  // @@protoc_insertion_point(field_get:qtprotobuf.examples.ListFrame.end)
  return end_;
}
inline void ListFrame::set_end(::google::protobuf::int32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:qtprotobuf.examples.ListFrame.end)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace examples
}  // namespace qtprotobuf

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::qtprotobuf::examples::Contact_PhoneType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::qtprotobuf::examples::Contact_PhoneType>() {
  return ::qtprotobuf::examples::Contact_PhoneType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_addressbook_2eproto
